{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_define_property.js","node_modules/simplelightbox/src/simple-lightbox.js","src/js/gallery-items.js","src/js/01-gallery.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","class SimpleLightbox {\n\n    defaultOptions = {\n        sourceAttr: 'href',\n        overlay: true,\n        overlayOpacity: 0.7,\n        spinner: true,\n        nav: true,\n        navText: ['&lsaquo;', '&rsaquo;'],\n        captions: true,\n        captionDelay: 0,\n        captionSelector: 'img',\n        captionType: 'attr',\n        captionsData: 'title',\n        captionPosition: 'bottom',\n        captionClass: '',\n        close: true,\n        closeText: '&times;',\n        swipeClose: true,\n        showCounter: true,\n        fileExt: 'png|jpg|jpeg|gif|webp',\n        animationSlide: true,\n        animationSpeed: 250,\n        preloading: true,\n        enableKeyboard: true,\n        loop: true,\n        rel: false,\n        docClose: true,\n        swipeTolerance: 50,\n        className: 'simple-lightbox',\n        widthRatio: 0.8,\n        heightRatio: 0.9,\n        scaleImageToRatio: false,\n        disableRightClick: false,\n        disableScroll: true,\n        alertError: true,\n        alertErrorMessage: 'Image not found, next image will be loaded',\n        additionalHtml: false,\n        history: true,\n        throttleInterval: 0,\n        doubleTapZoom: 2,\n        maxZoom: 10,\n        htmlClass: 'has-lightbox',\n        rtl: false,\n        fixedClass: 'sl-fixed',\n        fadeSpeed: 300,\n        uniqueImages: true,\n        focus: true,\n        scrollZoom: true,\n        scrollZoomFactor: 0.5,\n        download: false\n    };\n\n    transitionPrefix;\n    isPassiveEventsSupported;\n    transitionCapable = false;\n\n    isTouchDevice = ('ontouchstart' in window);\n    isAppleDevice = /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\n\n    initialLocationHash;\n\n    pushStateSupport = ('pushState' in history);\n\n    isOpen = false;\n    isAnimating = false;\n    isClosing = false;\n    isFadeIn = false;\n    urlChangedOnce = false;\n    hashReseted = false;\n    historyHasChanges = false;\n    historyUpdateTimeout = null;\n\n    currentImage;\n    eventNamespace = 'simplelightbox';\n    domNodes = {};\n\n    loadedImages = [];\n    initialImageIndex = 0;\n    currentImageIndex = 0;\n\n    initialSelector = null;\n    globalScrollbarWidth = 0;\n\n    controlCoordinates = {\n        swipeDiff: 0,\n        swipeYDiff: 0,\n        swipeStart: 0,\n        swipeEnd: 0,\n        swipeYStart: 0,\n        swipeYEnd: 0,\n        mousedown: false,\n        imageLeft: 0,\n        zoomed: false,\n        containerHeight: 0,\n        containerWidth: 0,\n        containerOffsetX: 0,\n        containerOffsetY: 0,\n        imgHeight: 0,\n        imgWidth: 0,\n        capture: false,\n        initialOffsetX: 0,\n        initialOffsetY: 0,\n        initialPointerOffsetX: 0,\n        initialPointerOffsetY: 0,\n        initialPointerOffsetX2: 0,\n        initialPointerOffsetY2: 0,\n        initialScale: 1,\n        initialPinchDistance: 0,\n        pointerOffsetX: 0,\n        pointerOffsetY: 0,\n        pointerOffsetX2: 0,\n        pointerOffsetY2: 0,\n        targetOffsetX: 0,\n        targetOffsetY: 0,\n        targetScale: 0,\n        pinchOffsetX: 0,\n        pinchOffsetY: 0,\n        limitOffsetX: 0,\n        limitOffsetY: 0,\n        scaleDifference: 0,\n        targetPinchDistance: 0,\n        touchCount: 0,\n        doubleTapped: false,\n        touchmoveCount: 0\n    };\n\n    constructor(elements, options) {\n\n        this.options = Object.assign(this.defaultOptions, options);\n        this.isPassiveEventsSupported = this.checkPassiveEventsSupport();\n\n        if (typeof elements === 'string') {\n            this.initialSelector = elements;\n            this.elements = Array.from(document.querySelectorAll(elements));\n        } else {\n            this.elements = ((typeof elements.length !== 'undefined') && elements.length > 0) ? Array.from(elements) : [elements];\n        }\n\n        this.relatedElements = [];\n\n        this.transitionPrefix = this.calculateTransitionPrefix();\n        this.transitionCapable = this.transitionPrefix !== false;\n        this.initialLocationHash = this.hash;\n\n        // this should be handled by attribute selector IMHO! => 'a[rel=bla]'...\n        if (this.options.rel) {\n            this.elements = this.getRelated(this.options.rel);\n        }\n\n        if (this.options.uniqueImages) {\n            let imgArr = [];\n            this.elements = Array.from(this.elements).filter(\n                element => {\n                    let src = element.getAttribute(this.options.sourceAttr);\n                    if(imgArr.indexOf(src) === -1) {\n                        imgArr.push(src);\n                        return true;\n                    }\n                    return false;\n                }\n            );\n        }\n\n        this.createDomNodes();\n\n        if (this.options.close) {\n            this.domNodes.wrapper.appendChild(this.domNodes.closeButton);\n        }\n\n        if (this.options.nav) {\n            this.domNodes.wrapper.appendChild(this.domNodes.navigation);\n        }\n\n        if (this.options.spinner) {\n            this.domNodes.wrapper.appendChild(this.domNodes.spinner);\n        }\n\n        this.addEventListener(this.elements, 'click.' + this.eventNamespace, (event) => {\n\n            if (this.isValidLink(event.currentTarget)) {\n                event.preventDefault();\n                if (this.isAnimating) {\n                    return false;\n                }\n\n                this.initialImageIndex = this.elements.indexOf(event.currentTarget);\n                this.openImage(event.currentTarget);\n            }\n        });\n\n        // close addEventListener click addEventListener doc\n        if (this.options.docClose) {\n            this.addEventListener(this.domNodes.wrapper, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], (event) => {\n                if (this.isOpen && event.target === event.currentTarget) {\n                    this.close();\n                }\n            });\n        }\n\n        // disable rightclick\n        if (this.options.disableRightClick) {\n            this.addEventListener(document.body, 'contextmenu.' + this.eventNamespace, (event) => {\n                if (event.target.parentElement.classList.contains(\"sl-image\")) {\n                    event.preventDefault();\n                }\n            });\n        }\n\n        // keyboard-control\n        if (this.options.enableKeyboard) {\n            this.addEventListener(document.body, 'keyup.' + this.eventNamespace, this.throttle((event) => {\n                this.controlCoordinates.swipeDiff = 0;\n                // keyboard control only if lightbox is open\n\n                if (this.isAnimating && event.key === 'Escape') {\n                    this.currentImage.setAttribute('src', '');\n                    this.isAnimating = false;\n                    this.close();\n                    return;\n                }\n\n                if (this.isOpen) {\n                    event.preventDefault();\n                    if (event.key === 'Escape') {\n                        this.close();\n                    }\n                    if(!this.isAnimating && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) > -1) {\n                      this.loadImage(event.key === 'ArrowRight' ? 1 : -1);\n                    }\n                }\n            }, this.options.throttleInterval));\n        }\n\n        this.addEvents();\n    }\n\n    checkPassiveEventsSupport() {\n        // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n        // Test via a getter in the options object to see if the passive property is accessed\n        let supportsPassive = false;\n        try {\n            let opts = Object.defineProperty({}, 'passive', {\n                get: function() {\n                    supportsPassive = true;\n                }\n            });\n            window.addEventListener(\"testPassive\", null, opts);\n            window.removeEventListener(\"testPassive\", null, opts);\n        } catch (e) {}\n        return supportsPassive;\n    }\n\n    getCaptionElement(elem) {\n        // look at sibling selector\n        if( this.options.captionSelector.startsWith('+')) {\n            let selector = this.options.captionSelector.replace(/^\\+/, '').trimStart();\n            let sibling = elem.nextElementSibling;\n            if(sibling.matches(selector)) {\n                return sibling;\n            }\n            return false;\n        }\n        else if( this.options.captionSelector.startsWith('>') ) {\n            let selector = this.options.captionSelector.replace(/^>/, '').trimStart();\n            return elem.querySelector(selector);\n        }\n        else {\n            return elem.querySelector(this.options.captionSelector);\n        }\n    }\n\n    generateQuerySelector(elem) {\n        const {\n            tagName,\n            id,\n            className,\n            parentNode\n        } = elem;\n\n        if (tagName === 'HTML') return 'HTML';\n\n        let str = tagName;\n\n        str += (id !== '') ? `#${id}` : '';\n\n        if (className) {\n            const classes = className.trim().split(/\\s/);\n            for (let i = 0; i < classes.length; i++) {\n                str += `.${classes[i]}`;\n            }\n        }\n\n        let childIndex = 1;\n\n        for (let e = elem; e.previousElementSibling; e = e.previousElementSibling) {\n            childIndex += 1;\n        }\n\n        str += `:nth-child(${childIndex})`;\n\n        return `${this.generateQuerySelector(parentNode)} > ${str}`;\n    }\n\n    createDomNodes() {\n        this.domNodes.overlay = document.createElement('div');\n        this.domNodes.overlay.classList.add('sl-overlay');\n        this.domNodes.overlay.dataset.opacityTarget = this.options.overlayOpacity;\n\n        this.domNodes.closeButton = document.createElement('button');\n        this.domNodes.closeButton.classList.add('sl-close');\n        this.domNodes.closeButton.innerHTML = this.options.closeText;\n\n        this.domNodes.spinner = document.createElement('div');\n        this.domNodes.spinner.classList.add('sl-spinner');\n        this.domNodes.spinner.innerHTML = '<div></div>';\n\n        this.domNodes.navigation = document.createElement('div');\n        this.domNodes.navigation.classList.add('sl-navigation');\n        this.domNodes.navigation.innerHTML = `<button class=\"sl-prev\">${this.options.navText[0]}</button><button class=\"sl-next\">${this.options.navText[1]}</button>`;\n\n        this.domNodes.counter = document.createElement('div');\n        this.domNodes.counter.classList.add('sl-counter');\n        this.domNodes.counter.innerHTML = '<span class=\"sl-current\"></span>/<span class=\"sl-total\"></span>';\n\n        this.domNodes.download = document.createElement('div');\n        this.domNodes.download.classList.add('sl-download');\n\n        this.domNodes.downloadLink = document.createElement('a');\n        this.domNodes.downloadLink.setAttribute('download', '');\n        this.domNodes.downloadLink.textContent = this.options.download;\n\n        this.domNodes.download.appendChild(this.domNodes.downloadLink);\n\n        this.domNodes.caption = document.createElement('div');\n        this.domNodes.caption.classList.add('sl-caption', 'pos-' + this.options.captionPosition);\n        if (this.options.captionClass) {\n            let captionClasses = this.options.captionClass.split(/[\\s,]+/);\n            this.domNodes.caption.classList.add(...captionClasses);\n        }\n\n        this.domNodes.image = document.createElement('div');\n        this.domNodes.image.classList.add('sl-image');\n\n        this.domNodes.wrapper = document.createElement('div');\n        this.domNodes.wrapper.classList.add('sl-wrapper');\n        this.domNodes.wrapper.setAttribute('tabindex',-1);\n        this.domNodes.wrapper.setAttribute('role','dialog');\n        this.domNodes.wrapper.setAttribute('aria-hidden',false);\n        if (this.options.className) {\n            this.domNodes.wrapper.classList.add(this.options.className);\n        }\n        if(this.options.rtl) {\n            this.domNodes.wrapper.classList.add('sl-dir-rtl');\n        }\n    }\n\n    throttle(func, limit) {\n        let inThrottle;\n        return function () {\n            if (!inThrottle) {\n                func.apply(this, arguments);\n                inThrottle = true;\n                setTimeout(function () {\n                    return inThrottle = false;\n                }, limit);\n            }\n        };\n    }\n\n    isValidLink(element) {\n        return (!this.options.fileExt) || (element.getAttribute(this.options.sourceAttr) && new RegExp('(' + this.options.fileExt + ')($|\\\\?.*$)', 'i').test(element.getAttribute(this.options.sourceAttr)));\n    }\n\n    calculateTransitionPrefix() {\n        let s = (document.body || document.documentElement).style;\n\n        return 'transition' in s ? '' :\n            'WebkitTransition' in s ? '-webkit-' :\n                'MozTransition' in s ? '-moz-' :\n                    'OTransition' in s ? '-o' :\n                        false;\n    }\n\n    getScrollbarWidth() {\n        let scrollbarWidth = 0;\n        let scrollDiv = document.createElement('div');\n        scrollDiv.classList.add('sl-scrollbar-measure');\n\n        document.body.appendChild(scrollDiv);\n        scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n        document.body.removeChild(scrollDiv);\n        return scrollbarWidth;\n    }\n\n    toggleScrollbar(type) {\n        let scrollbarWidth = 0;\n        let fixedElements =  [].slice.call(document.querySelectorAll('.'+this.options.fixedClass))\n        if (type === 'hide') {\n            let fullWindowWidth = window.innerWidth;\n            if (!fullWindowWidth) {\n                let documentElementRect = document.documentElement.getBoundingClientRect();\n                fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n            }\n            if (document.body.clientWidth < fullWindowWidth || this.isAppleDevice) {\n                let paddingRight = parseInt(window.getComputedStyle(document.body).paddingRight || 0, 10);\n                scrollbarWidth = this.getScrollbarWidth();\n                document.body.dataset.originalPaddingRight = paddingRight;\n                if (scrollbarWidth > 0 || (scrollbarWidth == 0 && this.isAppleDevice)) {\n                    document.body.classList.add('hidden-scroll');\n                    document.body.style.paddingRight = (paddingRight + scrollbarWidth) + 'px';\n\n                    fixedElements.forEach(element => {\n                        const actualPadding = element.style.paddingRight\n                        const calculatedPadding = window.getComputedStyle(element)['padding-right']\n                        element.dataset.originalPaddingRight = actualPadding;\n                        element.style.paddingRight = `${parseFloat(calculatedPadding) + scrollbarWidth}px`\n                    });\n\n                }\n            }\n        } else {\n            document.body.classList.remove('hidden-scroll');\n            document.body.style.paddingRight = document.body.dataset.originalPaddingRight + 'px';\n\n            fixedElements.forEach(element => {\n                const padding = element.dataset.originalPaddingRight;\n                if (typeof padding !== 'undefined') {\n                    element.style.paddingRight = padding\n                }\n            });\n        }\n        return scrollbarWidth;\n    }\n\n    close() {\n        if (!this.isOpen || this.isAnimating || this.isClosing) {\n            return false;\n        }\n\n        this.isClosing = true;\n        let element = this.relatedElements[this.currentImageIndex];\n        element.dispatchEvent(new Event('close.simplelightbox'));\n\n        if (this.options.history) {\n            this.historyHasChanges = false;\n            if(!this.hashReseted) {\n                this.resetHash();\n            }\n        }\n\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n\n        this.fadeOut(this.domNodes.overlay, this.options.fadeSpeed);\n        this.fadeOut(document.querySelectorAll('.sl-image img,  .sl-close, .sl-navigation, .sl-image .sl-caption, .sl-counter'), this.options.fadeSpeed, () => {\n            if (this.options.disableScroll) {\n                this.toggleScrollbar('show');\n            }\n\n            if (this.options.htmlClass && this.options.htmlClass !== '') {\n                document.querySelector('html').classList.remove(this.options.htmlClass);\n            }\n\n            document.body.removeChild(this.domNodes.wrapper);\n            if(this.options.overlay) {\n                document.body.removeChild(this.domNodes.overlay);\n            }\n            this.domNodes.additionalHtml = null;\n            this.domNodes.download = null;\n\n            element.dispatchEvent(new Event('closed.simplelightbox'));\n\n            this.isClosing = false;\n        });\n\n        this.currentImage = null;\n        this.isOpen = false;\n        this.isAnimating = false;\n\n        // reset touchcontrol coordinates\n        for (let key in this.controlCoordinates) {\n            this.controlCoordinates[key] = 0;\n        }\n        this.controlCoordinates.mousedown = false;\n        this.controlCoordinates.zoomed = false;\n        this.controlCoordinates.capture = false;\n        this.controlCoordinates.initialScale = this.minMax(1, 1, this.options.maxZoom);\n        this.controlCoordinates.doubleTapped = false;\n    }\n\n    get hash() {\n        return window.location.hash.substring(1);\n    }\n\n    preload() {\n        let index = this.currentImageIndex,\n            length = this.relatedElements.length,\n            next = (index + 1 < 0) ? length - 1 : (index + 1 >= length - 1) ? 0 : index + 1,\n            prev = (index - 1 < 0) ? length - 1 : (index - 1 >= length - 1) ? 0 : index - 1,\n            nextImage = new Image(),\n            prevImage = new Image();\n\n        nextImage.addEventListener('load', (event) => {\n            let src = event.target.getAttribute('src');\n            if (this.loadedImages.indexOf(src) === -1) { //is this condition even required... setting multiple times will not change usage...\n                this.loadedImages.push(src);\n            }\n            this.relatedElements[index].dispatchEvent(new Event('nextImageLoaded.' + this.eventNamespace));\n        });\n        nextImage.setAttribute('src', this.relatedElements[next].getAttribute(this.options.sourceAttr));\n\n        prevImage.addEventListener('load', (event) => {\n            let src = event.target.getAttribute('src');\n            if (this.loadedImages.indexOf(src) === -1) {\n                this.loadedImages.push(src);\n            }\n            this.relatedElements[index].dispatchEvent(new Event('prevImageLoaded.' + this.eventNamespace));\n        });\n        prevImage.setAttribute('src', this.relatedElements[prev].getAttribute(this.options.sourceAttr));\n    }\n\n    loadImage(direction) {\n        let slideDirection = direction;\n        if(this.options.rtl) {\n            direction = -direction;\n        }\n\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('change.' + this.eventNamespace));\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'next' : 'prev') + '.' + this.eventNamespace));\n\n        let newIndex = this.currentImageIndex + direction;\n\n        if (this.isAnimating || (newIndex < 0 || newIndex >= this.relatedElements.length) && this.options.loop === false) {\n            return false;\n        }\n\n        this.currentImageIndex = (newIndex < 0) ? this.relatedElements.length - 1 : (newIndex > this.relatedElements.length - 1) ? 0 : newIndex;\n\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n\n\n        if (this.options.animationSlide) {\n            this.slide(this.options.animationSpeed / 1000, (-100 * slideDirection) - this.controlCoordinates.swipeDiff + 'px');\n        }\n        this.fadeOut(this.domNodes.image, this.options.fadeSpeed, () => {\n            this.isAnimating = true;\n            if(!this.isClosing) {\n                setTimeout(() => {\n                    let element = this.relatedElements[this.currentImageIndex];\n                    if(!this.currentImage) return;\n                    this.currentImage.setAttribute('src', element.getAttribute(this.options.sourceAttr));\n\n                    if (this.loadedImages.indexOf(element.getAttribute(this.options.sourceAttr)) === -1) {\n                        this.show(this.domNodes.spinner);\n                    }\n\n                    if(this.domNodes.image.contains(this.domNodes.caption)) {\n                      this.domNodes.image.removeChild(this.domNodes.caption);\n                    }\n\n                    this.adjustImage(slideDirection);\n                    if (this.options.preloading) this.preload();\n                }, 100);\n            } else {\n                this.isAnimating = false;\n            }\n        });\n    }\n\n    adjustImage(direction) {\n        if (!this.currentImage) {\n            return false;\n        }\n\n        let tmpImage = new Image(),\n            windowWidth = window.innerWidth * this.options.widthRatio,\n            windowHeight = window.innerHeight * this.options.heightRatio;\n\n        tmpImage.setAttribute('src', this.currentImage.getAttribute('src'));\n\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n        this.zoomPanElement(0, 0, 1);\n\n        tmpImage.addEventListener('error', (event) => {\n            this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('error.' + this.eventNamespace));\n            this.isAnimating = false;\n            this.isOpen = true;\n            this.domNodes.spinner.style.display = 'none';\n\n            let dirIsDefined = direction === 1 || direction === -1;\n            if (this.initialImageIndex === this.currentImageIndex && dirIsDefined) {\n                return this.close();\n            }\n\n            if (this.options.alertError) {\n                alert(this.options.alertErrorMessage);\n            }\n\n            this.loadImage(dirIsDefined ? direction : 1);\n        });\n\n\n        tmpImage.addEventListener('load', (event) => {\n            if (typeof direction !== 'undefined') {\n                this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('changed.' + this.eventNamespace));\n                this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'nextDone' : 'prevDone') + '.' + this.eventNamespace));\n            }\n\n            // history\n            if (this.options.history) {\n                this.updateURL();\n            }\n\n            if (this.loadedImages.indexOf(this.currentImage.getAttribute('src')) === -1) {\n                this.loadedImages.push(this.currentImage.getAttribute('src'));\n            }\n\n            let imageWidth = event.target.width,\n                imageHeight = event.target.height;\n\n            if (this.options.scaleImageToRatio || imageWidth > windowWidth || imageHeight > windowHeight) {\n                let ratio = imageWidth / imageHeight > windowWidth / windowHeight ? imageWidth / windowWidth : imageHeight / windowHeight;\n                imageWidth /= ratio;\n                imageHeight /= ratio;\n            }\n\n            this.domNodes.image.style.top = (window.innerHeight - imageHeight) / 2 + 'px';\n            this.domNodes.image.style.left = (window.innerWidth - imageWidth - this.globalScrollbarWidth) / 2 + 'px';\n            this.domNodes.image.style.width = imageWidth + 'px';\n            this.domNodes.image.style.height = imageHeight + 'px';\n\n            this.domNodes.spinner.style.display = 'none';\n            if( this.options.focus ) {\n                this.forceFocus();\n            }\n            this.fadeIn(this.currentImage, this.options.fadeSpeed, () => {\n                if( this.options.focus ) {\n                    this.domNodes.wrapper.focus();\n                }\n            });\n\n            this.isOpen = true;\n\n            let captionContainer,\n                captionText;\n\n            if (typeof this.options.captionSelector === 'string') {\n                captionContainer = this.options.captionSelector === 'self'\n                    ? this.relatedElements[this.currentImageIndex]\n                    : this.getCaptionElement(this.relatedElements[this.currentImageIndex]);\n            } else if (typeof this.options.captionSelector === 'function') {\n                captionContainer = this.options.captionSelector(this.relatedElements[this.currentImageIndex]);\n            }\n\n            if(this.options.captions && captionContainer) {\n                if (this.options.captionType === 'data') {\n                    captionText = captionContainer.dataset[this.options.captionsData];\n                } else if (this.options.captionType === 'text') {\n                    captionText = captionContainer.innerHTML;\n                } else {\n                    captionText = captionContainer.getAttribute(this.options.captionsData);\n                }\n            }\n\n            if (!this.options.loop) {\n                if (this.currentImageIndex === 0) {\n                    this.hide(this.domNodes.navigation.querySelector('.sl-prev'));\n                }\n                if (this.currentImageIndex >= this.relatedElements.length - 1) {\n                    this.hide(this.domNodes.navigation.querySelector('.sl-next'));\n                }\n                if (this.currentImageIndex > 0) {\n                    this.show(this.domNodes.navigation.querySelector('.sl-prev'));\n                }\n                if (this.currentImageIndex < this.relatedElements.length - 1) {\n                    this.show(this.domNodes.navigation.querySelector('.sl-next'));\n                }\n            } else {\n                if (this.relatedElements.length === 1) {\n                    this.hide(this.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n                } else {\n                    this.show(this.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n                }\n            }\n\n\n            if (direction === 1 || direction === -1) {\n                if (this.options.animationSlide) {\n                    this.slide(0, 100 * direction + 'px');\n                    setTimeout(() => {\n                        this.slide(this.options.animationSpeed / 1000, 0 + 'px');\n                    }, 50);\n                }\n                this.fadeIn(this.domNodes.image, this.options.fadeSpeed, () => {\n                    this.isAnimating = false;\n                    this.setCaption(captionText, imageWidth);\n                });\n\n            } else {\n                this.isAnimating = false;\n                this.setCaption(captionText, imageWidth);\n            }\n\n            if (this.options.additionalHtml && !this.domNodes.additionalHtml) {\n                this.domNodes.additionalHtml = document.createElement('div');\n                this.domNodes.additionalHtml.classList.add('sl-additional-html');\n                this.domNodes.additionalHtml.innerHTML = this.options.additionalHtml;\n                this.domNodes.image.appendChild(this.domNodes.additionalHtml);\n            }\n\n            if (this.options.download) {\n                this.domNodes.downloadLink.setAttribute('href', this.currentImage.getAttribute('src'));\n            }\n\n        });\n    }\n\n    zoomPanElement(targetOffsetX, targetOffsetY, targetScale) {\n\n        this.currentImage.style[this.transitionPrefix + 'transform'] = 'translate(' + targetOffsetX + ',' + targetOffsetY + ') scale(' + targetScale + ')';\n\n    };\n\n    minMax(value, min, max) {\n        return (value < min) ? min : (value > max) ? max : value;\n    };\n\n    setZoomData(initialScale, targetOffsetX, targetOffsetY) {\n        this.currentImage.dataset.scale = initialScale;\n        this.currentImage.dataset.translateX = targetOffsetX;\n        this.currentImage.dataset.translateY = targetOffsetY;\n    };\n\n\n    hashchangeHandler() {\n        if (this.isOpen && this.hash === this.initialLocationHash) {\n            this.hashReseted = true;\n            this.close();\n        }\n    }\n\n    addEvents() {\n\n        // resize/responsive\n        this.addEventListener(window, 'resize.' + this.eventNamespace, (event) => {\n            //this.adjustImage.bind(this)\n            if (this.isOpen) {\n                this.adjustImage();\n            }\n        });\n\n        this.addEventListener(this.domNodes.closeButton, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], this.close.bind(this));\n\n        if (this.options.history) {\n            setTimeout(() => {\n                this.addEventListener(window, 'hashchange.' + this.eventNamespace, (event) => {\n                    if (this.isOpen) {\n                        this.hashchangeHandler();\n                    }\n                });\n            }, 40);\n        }\n\n        this.addEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace, (event) => {\n            if (!event.currentTarget.tagName.match(/button/i)) {\n                return true;\n            }\n\n            event.preventDefault();\n            this.controlCoordinates.swipeDiff = 0;\n            this.loadImage(event.currentTarget.classList.contains('sl-next') ? 1 : -1);\n        });\n\n        if (this.options.scrollZoom) {\n            let scale = 1\n\n            this.addEventListener(this.domNodes.image, ['mousewheel','DOMMouseScroll'], (event) => {\n                if (this.controlCoordinates.mousedown || this.isAnimating || this.isClosing || !this.isOpen) {\n                    return true;\n                }\n                if(this.controlCoordinates.containerHeight == 0) {\n                    this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                    this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                    this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                    this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                    this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                    this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                    this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                }\n                // event.preventDefault();\n\n                let delta = event.delta || event.wheelDelta;\n                if (delta === undefined) {\n                    //we are on firefox\n                    delta = event.detail;\n                }\n                delta = Math.max(-1,Math.min(1,delta)); // cap the delta to [-1,1] for cross browser consistency\n\n                // apply zoom\n                scale += delta * this.options.scrollZoomFactor * scale;\n                scale = Math.max(1, Math.min( this.options.maxZoom, scale));\n\n                this.controlCoordinates.targetScale = scale;\n\n                let scrollTopPos = document.documentElement.scrollTop || document.body.scrollTop;\n\n                this.controlCoordinates.pinchOffsetX = event.pageX;\n                this.controlCoordinates.pinchOffsetY = event.pageY - scrollTopPos || 0; // need to substract the scroll position\n\n                this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                this.controlCoordinates.scaleDifference = this.controlCoordinates.targetScale - this.controlCoordinates.initialScale;\n                this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.initialOffsetX - ((((((this.controlCoordinates.pinchOffsetX - this.controlCoordinates.containerOffsetX) - (this.controlCoordinates.containerWidth / 2)) - this.controlCoordinates.initialOffsetX) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.initialOffsetY - ((((((this.controlCoordinates.pinchOffsetY - this.controlCoordinates.containerOffsetY) - (this.controlCoordinates.containerHeight / 2)) - this.controlCoordinates.initialOffsetY) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n                if (this.controlCoordinates.targetScale > 1) {\n                    this.controlCoordinates.zoomed = true;\n                    if ( (!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                        this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                    }\n                } else {\n                    if (this.controlCoordinates.initialScale === 1) {\n                        this.controlCoordinates.zoomed = false;\n                        if (this.domNodes.caption.style.display === 'none') {\n                            this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                        }\n                    }\n                    this.controlCoordinates.initialPinchDistance = null;\n                    this.controlCoordinates.capture = false;\n                }\n\n                this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                this.controlCoordinates.initialScale = this.controlCoordinates.targetScale;\n                this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n\n                this.setZoomData(this.controlCoordinates.targetScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n            });\n        }\n\n        this.addEventListener(this.domNodes.image, ['touchstart.' + this.eventNamespace, 'mousedown.' + this.eventNamespace], (event) => {\n            if (event.target.tagName === 'A' && event.type === 'touchstart') {\n                return true;\n            }\n\n            if (event.type === 'mousedown') {\n                event.preventDefault();\n                this.controlCoordinates.initialPointerOffsetX = event.clientX;\n                this.controlCoordinates.initialPointerOffsetY = event.clientY;\n                this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                this.controlCoordinates.capture = true;\n            } else {\n                this.controlCoordinates.touchCount = event.touches.length;\n                this.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n                this.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n                this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                if (this.controlCoordinates.touchCount === 1) /* Single touch */ {\n                    if (!this.controlCoordinates.doubleTapped) {\n                        this.controlCoordinates.doubleTapped = true;\n                        setTimeout(() => {\n                            this.controlCoordinates.doubleTapped = false;\n                        }, 300);\n                    } else {\n\n                        this.currentImage.classList.add('sl-transition');\n                        if (!this.controlCoordinates.zoomed) {\n                            this.controlCoordinates.initialScale = this.options.doubleTapZoom;\n                            this.setZoomData(this.controlCoordinates.initialScale,0, 0);\n                            this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n\n\n                            if ( (!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                                this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                            }\n\n                            this.controlCoordinates.zoomed = true;\n                        } else {\n                            this.controlCoordinates.initialScale = 1;\n                            this.setZoomData(this.controlCoordinates.initialScale,0, 0);\n                            this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                            this.controlCoordinates.zoomed = false;\n                        }\n\n                        setTimeout(() => {\n                            if (this.currentImage) {\n                                this.currentImage.classList.remove('sl-transition');\n                            }\n                        }, 200);\n                        return false;\n                    }\n\n                    this.controlCoordinates.initialOffsetX  = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                }\n                else if (this.controlCoordinates.touchCount === 2) /* Pinch */ {\n                    this.controlCoordinates.initialPointerOffsetX2 = event.touches[1].clientX;\n                    this.controlCoordinates.initialPointerOffsetY2 = event.touches[1].clientY;\n                    this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                    this.controlCoordinates.pinchOffsetX = (this.controlCoordinates.initialPointerOffsetX + this.controlCoordinates.initialPointerOffsetX2) / 2;\n                    this.controlCoordinates.pinchOffsetY = (this.controlCoordinates.initialPointerOffsetY + this.controlCoordinates.initialPointerOffsetY2) / 2;\n                    this.controlCoordinates.initialPinchDistance = Math.sqrt(((this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialPointerOffsetX2) * (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialPointerOffsetX2)) + ((this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialPointerOffsetY2) * (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialPointerOffsetY2)));\n                }\n                this.controlCoordinates.capture = true;\n            }\n            if(this.controlCoordinates.mousedown) return true;\n            if (this.transitionCapable) {\n                this.controlCoordinates.imageLeft = parseInt(this.domNodes.image.style.left, 10);\n            }\n            this.controlCoordinates.mousedown = true;\n            this.controlCoordinates.swipeDiff = 0;\n            this.controlCoordinates.swipeYDiff = 0;\n            this.controlCoordinates.swipeStart = event.pageX || event.touches[0].pageX;\n            this.controlCoordinates.swipeYStart = event.pageY || event.touches[0].pageY;\n\n            return false;\n        });\n\n        this.addEventListener(this.domNodes.image, ['touchmove.' + this.eventNamespace, 'mousemove.' + this.eventNamespace, 'MSPointerMove'], (event) => {\n\n\n            if (!this.controlCoordinates.mousedown) {\n                return true;\n            }\n\n            if (event.type === 'touchmove') {\n                if (this.controlCoordinates.capture === false) {\n                    return false;\n                }\n\n                this.controlCoordinates.pointerOffsetX = event.touches[0].clientX;\n                this.controlCoordinates.pointerOffsetY = event.touches[0].clientY;\n                this.controlCoordinates.touchCount = event.touches.length;\n                this.controlCoordinates.touchmoveCount++;\n\n                if (this.controlCoordinates.touchCount > 1) /* Pinch */ {\n                    this.controlCoordinates.pointerOffsetX2 = event.touches[1].clientX;\n                    this.controlCoordinates.pointerOffsetY2 = event.touches[1].clientY;\n                    this.controlCoordinates.targetPinchDistance = Math.sqrt(((this.controlCoordinates.pointerOffsetX - this.controlCoordinates.pointerOffsetX2) * (this.controlCoordinates.pointerOffsetX - this.controlCoordinates.pointerOffsetX2)) + ((this.controlCoordinates.pointerOffsetY - this.controlCoordinates.pointerOffsetY2) * (this.controlCoordinates.pointerOffsetY - this.controlCoordinates.pointerOffsetY2)));\n                    if (this.controlCoordinates.initialPinchDistance === null) {\n                        this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                    }\n\n                    if (Math.abs(this.controlCoordinates.initialPinchDistance - this.controlCoordinates.targetPinchDistance) >= 1) {\n                        /* Initialize helpers */\n                        this.controlCoordinates.targetScale = this.minMax(this.controlCoordinates.targetPinchDistance / this.controlCoordinates.initialPinchDistance * this.controlCoordinates.initialScale, 1, this.options.maxZoom);\n                        this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                        this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                        this.controlCoordinates.scaleDifference = this.controlCoordinates.targetScale - this.controlCoordinates.initialScale;\n                        this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.initialOffsetX - ((((((this.controlCoordinates.pinchOffsetX - this.controlCoordinates.containerOffsetX) - (this.controlCoordinates.containerWidth / 2)) - this.controlCoordinates.initialOffsetX) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                        this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.initialOffsetY - ((((((this.controlCoordinates.pinchOffsetY - this.controlCoordinates.containerOffsetY) - (this.controlCoordinates.containerHeight / 2)) - this.controlCoordinates.initialOffsetY) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                        this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n                        if (this.controlCoordinates.targetScale > 1) {\n                            this.controlCoordinates.zoomed = true;\n                            if ((!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                                this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                            }\n                        }\n\n                        this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                        this.controlCoordinates.initialScale = this.controlCoordinates.targetScale;\n                        this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                        this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                    }\n                } else {\n                    this.controlCoordinates.targetScale = this.controlCoordinates.initialScale;\n                    this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                    this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                    this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.pointerOffsetX - (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialOffsetX), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                    this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.pointerOffsetY - (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialOffsetY), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                    if (Math.abs(this.controlCoordinates.targetOffsetX) === Math.abs(this.controlCoordinates.limitOffsetX)) {\n                        this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                        this.controlCoordinates.initialPointerOffsetX = this.controlCoordinates.pointerOffsetX;\n                    }\n\n                    if (Math.abs(this.controlCoordinates.targetOffsetY) === Math.abs(this.controlCoordinates.limitOffsetY)) {\n                        this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                        this.controlCoordinates.initialPointerOffsetY = this.controlCoordinates.pointerOffsetY;\n                    }\n\n                    this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                    this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n                }\n            }\n\n            /* Mouse Move implementation */\n            if (event.type === 'mousemove' && this.controlCoordinates.mousedown) {\n              if(event.type == 'touchmove') return true;\n\n                event.preventDefault();\n\n              if(this.controlCoordinates.capture === false) return false;\n\n              this.controlCoordinates.pointerOffsetX = event.clientX;\n              this.controlCoordinates.pointerOffsetY = event.clientY;\n\n              this.controlCoordinates.targetScale = this.controlCoordinates.initialScale;\n              this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n              this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n              this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.pointerOffsetX - (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialOffsetX), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n              this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.pointerOffsetY - (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialOffsetY), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n              if (Math.abs(this.controlCoordinates.targetOffsetX) === Math.abs(this.controlCoordinates.limitOffsetX)) {\n                  this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                  this.controlCoordinates.initialPointerOffsetX = this.controlCoordinates.pointerOffsetX;\n              }\n\n              if (Math.abs(this.controlCoordinates.targetOffsetY) === Math.abs(this.controlCoordinates.limitOffsetY)) {\n                  this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                  this.controlCoordinates.initialPointerOffsetY = this.controlCoordinates.pointerOffsetY;\n              }\n\n              this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n              this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n            }\n\n            if (!this.controlCoordinates.zoomed) {\n\n                this.controlCoordinates.swipeEnd = event.pageX || event.touches[0].pageX;\n                this.controlCoordinates.swipeYEnd = event.pageY || event.touches[0].pageY;\n                this.controlCoordinates.swipeDiff = this.controlCoordinates.swipeStart - this.controlCoordinates.swipeEnd;\n                this.controlCoordinates.swipeYDiff = this.controlCoordinates.swipeYStart - this.controlCoordinates.swipeYEnd;\n                if (this.options.animationSlide) {\n                    this.slide(0, -this.controlCoordinates.swipeDiff + 'px');\n                }\n            }\n\n        });\n\n\n        this.addEventListener(this.domNodes.image, ['touchend.' + this.eventNamespace, 'mouseup.' + this.eventNamespace, 'touchcancel.' + this.eventNamespace, 'mouseleave.' + this.eventNamespace, 'pointerup', 'pointercancel', 'MSPointerUp', 'MSPointerCancel'], (event) => {\n\n\n            if (this.isTouchDevice && event.type === 'touchend') {\n                this.controlCoordinates.touchCount = event.touches.length;\n                if (this.controlCoordinates.touchCount === 0) /* No touch */ {\n                    /* Set attributes */\n                    if (this.currentImage) {\n                        this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                    }\n                    if (this.controlCoordinates.initialScale === 1) {\n                        this.controlCoordinates.zoomed = false;\n                        if (this.domNodes.caption.style.display === 'none') {\n                            this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                        }\n                    }\n                    this.controlCoordinates.initialPinchDistance = null;\n                    this.controlCoordinates.capture = false;\n                } else if (this.controlCoordinates.touchCount === 1) /* Single touch */ {\n                    this.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n                    this.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n                } else if (this.controlCoordinates.touchCount > 1) /* Pinch */ {\n                    this.controlCoordinates.initialPinchDistance = null;\n                }\n            }\n\n\n            if (this.controlCoordinates.mousedown) {\n                this.controlCoordinates.mousedown = false;\n                let possibleDir = true;\n                if (!this.options.loop) {\n                    if (this.currentImageIndex === 0 && this.controlCoordinates.swipeDiff < 0) {\n                        possibleDir = false;\n                    }\n                    if (this.currentImageIndex >= this.relatedElements.length - 1 && this.controlCoordinates.swipeDiff > 0) {\n                        possibleDir = false;\n                    }\n                }\n                if (Math.abs(this.controlCoordinates.swipeDiff) > this.options.swipeTolerance && possibleDir) {\n                    this.loadImage(this.controlCoordinates.swipeDiff > 0 ? 1 : -1);\n                }\n                else if (this.options.animationSlide) {\n                    this.slide(this.options.animationSpeed / 1000, 0 + 'px');\n                }\n\n                if (this.options.swipeClose && Math.abs(this.controlCoordinates.swipeYDiff) > 50 && Math.abs(this.controlCoordinates.swipeDiff) < this.options.swipeTolerance) {\n                    this.close();\n                }\n            }\n        });\n\n        this.addEventListener(this.domNodes.image, ['dblclick'], (event) => {\n            if(this.isTouchDevice) return;\n            this.controlCoordinates.initialPointerOffsetX = event.clientX;\n            this.controlCoordinates.initialPointerOffsetY = event.clientY;\n            this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n            this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n            this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n            this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n            this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n            this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n            this.currentImage.classList.add('sl-transition');\n\n            if(!this.controlCoordinates.zoomed) {\n                this.controlCoordinates.initialScale = this.options.doubleTapZoom;\n                this.setZoomData(this.controlCoordinates.initialScale, 0, 0);\n                this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                if ((!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                    this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                }\n                this.controlCoordinates.zoomed = true;\n            } else {\n                this.controlCoordinates.initialScale = 1;\n                this.setZoomData(this.controlCoordinates.initialScale, 0, 0);\n                this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                this.controlCoordinates.zoomed = false;\n                if (this.domNodes.caption.style.display === 'none') {\n                    this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                }\n\n            }\n            setTimeout(() => {\n                if (this.currentImage) {\n                    this.currentImage.classList.remove('sl-transition');\n                    this.currentImage.style[this.transitionPrefix + 'transform-origin'] = null;\n                }\n            }, 200);\n\n            this.controlCoordinates.capture = true;\n            return false;\n        });\n\n    }\n\n    getDimensions(element) {\n        let styles = window.getComputedStyle(element),\n            height = element.offsetHeight,\n            width = element.offsetWidth,\n            borderTopWidth = parseFloat(styles.borderTopWidth),\n            borderBottomWidth = parseFloat(styles.borderBottomWidth),\n            paddingTop = parseFloat(styles.paddingTop),\n            paddingBottom = parseFloat(styles.paddingBottom),\n            borderLeftWidth = parseFloat(styles.borderLeftWidth),\n            borderRightWidth = parseFloat(styles.borderRightWidth),\n            paddingLeft = parseFloat(styles.paddingLeft),\n            paddingRight = parseFloat(styles.paddingRight);\n        return {\n            height: height - borderBottomWidth - borderTopWidth - paddingTop - paddingBottom,\n            width: width - borderLeftWidth - borderRightWidth - paddingLeft - paddingRight\n        };\n    }\n\n    updateHash() {\n        let newHash = 'pid=' + (this.currentImageIndex + 1),\n            newURL = window.location.href.split('#')[0] + '#' + newHash;\n\n        this.hashReseted = false;\n\n        if (this.pushStateSupport) {\n            window.history[this.historyHasChanges ? 'replaceState' : 'pushState']('', document.title, newURL);\n        } else {\n            // what is the browser target of this?\n            if (this.historyHasChanges) {\n                window.location.replace(newURL);\n            } else {\n                window.location.hash = newHash;\n            }\n        }\n        if(!this.historyHasChanges) {\n            this.urlChangedOnce = true;\n        }\n\n        this.historyHasChanges = true;\n    }\n\n    resetHash() {\n        this.hashReseted = true;\n        if(this.urlChangedOnce) {\n            history.back();\n        } else {\n            if (this.pushStateSupport) {\n                history.pushState('', document.title, window.location.pathname + window.location.search);\n            } else {\n                window.location.hash = '';\n            }\n        }\n        //\n        //in case an history operation is still pending\n        clearTimeout(this.historyUpdateTimeout);\n    }\n\n    updateURL() {\n        clearTimeout(this.historyUpdateTimeout);\n        if (!this.historyHasChanges) {\n            this.updateHash(); // first time\n        } else {\n            this.historyUpdateTimeout = setTimeout(this.updateHash.bind(this), 800);\n        }\n    }\n\n    setCaption(captionText, imageWidth) {\n        if (this.options.captions && captionText && captionText !== '' && typeof captionText !== \"undefined\") {\n            this.hide(this.domNodes.caption);\n            this.domNodes.caption.style.width = imageWidth + 'px';\n            this.domNodes.caption.innerHTML = captionText;\n\n            this.domNodes.image.appendChild(this.domNodes.caption);\n\n            setTimeout(() => {\n                this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n            }, this.options.captionDelay);\n        }\n    }\n\n    slide(speed, pos) {\n        if (!this.transitionCapable) {\n            return this.domNodes.image.style.left = pos;\n        }\n\n        this.domNodes.image.style[this.transitionPrefix + 'transform'] = 'translateX(' + pos + ')';\n        this.domNodes.image.style[this.transitionPrefix + 'transition'] = this.transitionPrefix + 'transform ' + speed + 's linear';\n    }\n\n    getRelated(rel) {\n        let elems;\n        if (rel && rel !== false && rel !== 'nofollow') {\n            elems = Array.from(this.elements).filter(element => element.getAttribute('rel') === rel);\n        } else {\n            elems = this.elements;\n        }\n        return elems;\n    }\n\n    openImage(element) {\n        element.dispatchEvent(new Event('show.' + this.eventNamespace));\n\n        this.globalScrollbarWidth = this.getScrollbarWidth();\n        if (this.options.disableScroll) {\n            this.toggleScrollbar('hide');\n            this.globalScrollbarWidth = 0;\n        }\n\n        if (this.options.htmlClass && this.options.htmlClass !== '') {\n            document.querySelector('html').classList.add(this.options.htmlClass);\n        }\n\n        document.body.appendChild(this.domNodes.wrapper);\n\n        this.domNodes.wrapper.appendChild(this.domNodes.image);\n        if (this.options.overlay) {\n            document.body.appendChild(this.domNodes.overlay);\n        }\n\n        this.relatedElements = this.getRelated(element.rel);\n\n        if (this.options.showCounter) {\n            if (this.relatedElements.length == 1 && this.domNodes.wrapper.contains(this.domNodes.counter)) {\n                this.domNodes.wrapper.removeChild(this.domNodes.counter);\n            } else if(this.relatedElements.length > 1 && !this.domNodes.wrapper.contains(this.domNodes.counter)) {\n                this.domNodes.wrapper.appendChild(this.domNodes.counter);\n            }\n        }\n\n        if (this.options.download && this.domNodes.download) {\n            this.domNodes.wrapper.appendChild(this.domNodes.download);\n        }\n\n        this.isAnimating = true;\n\n        this.currentImageIndex = this.relatedElements.indexOf(element);\n\n        let targetURL = element.getAttribute(this.options.sourceAttr);\n\n        this.currentImage = document.createElement('img');\n        this.currentImage.style.display = 'none';\n        this.currentImage.setAttribute('src', targetURL);\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n\n        if (this.loadedImages.indexOf(targetURL) === -1) {\n            this.loadedImages.push(targetURL);\n        }\n\n        this.domNodes.image.innerHTML = '';\n        this.domNodes.image.setAttribute('style', '');\n\n        this.domNodes.image.appendChild(this.currentImage);\n\n\n        this.fadeIn(this.domNodes.overlay, this.options.fadeSpeed);\n        this.fadeIn([this.domNodes.counter, this.domNodes.navigation, this.domNodes.closeButton, this.domNodes.download], this.options.fadeSpeed);\n\n        this.show(this.domNodes.spinner);\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n        this.domNodes.counter.querySelector('.sl-total').innerHTML = this.relatedElements.length;\n\n        this.adjustImage();\n        if (this.options.preloading) {\n            this.preload();\n        }\n\n        setTimeout(() => {\n            element.dispatchEvent(new Event('shown.' + this.eventNamespace));\n        }, this.options.animationSpeed);\n    }\n\n    forceFocus() {\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.addEventListener(document, 'focusin.' + this.eventNamespace, event => {\n            if (document !== event.target &&\n                this.domNodes.wrapper !== event.target &&\n                !this.domNodes.wrapper.contains(event.target)) {\n                this.domNodes.wrapper.focus();\n            }\n        });\n    }\n\n    // utility\n    addEventListener(elements, events, callback, opts) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n\n        for (let element of elements) {\n            if (!element.namespaces) {\n                element.namespaces = {};\n            } // save the namespaces addEventListener the DOM element itself\n\n            for (let event of events) {\n                let options = opts || false;\n                let needsPassiveFix = ['touchstart', 'touchmove','mousewheel','DOMMouseScroll'].indexOf(event.split('.')[0]) >= 0;\n                if (needsPassiveFix && this.isPassiveEventsSupported) {\n                    if (typeof options === 'object') {\n                        options.passive = true;\n                    } else {\n                        options = {passive: true};\n                    }\n                }\n\n                element.namespaces[event] = callback;\n                element.addEventListener(event.split('.')[0], callback, options);\n            }\n        }\n    }\n\n    removeEventListener(elements, events) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n        for (let element of elements) {\n            for (let event of events) {\n                if(element.namespaces && element.namespaces[event]) {\n                    element.removeEventListener(event.split('.')[0], element.namespaces[event]);\n                    delete element.namespaces[event];\n                }\n            }\n        }\n    }\n\n    fadeOut(elements, duration, callback) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.opacity = parseFloat(element) || window.getComputedStyle(element).getPropertyValue(\"opacity\");\n        }\n\n        this.isFadeIn = false;\n\n        let step = 16.66666 / (duration || this.options.fadeSpeed),\n            fade = () => {\n                let currentOpacity = parseFloat(elements[0].style.opacity);\n                if ((currentOpacity -= step) < 0) {\n                    for (let element of elements) {\n                        element.style.display = \"none\";\n                        // element.style.opacity = '';\n                        element.style.opacity = 1;\n                    }\n                    callback && callback.call(this, elements);\n                } else {\n                    for (let element of elements) {\n                        element.style.opacity = currentOpacity;\n                    }\n                    requestAnimationFrame(fade);\n                }\n            };\n\n        fade();\n    }\n\n    fadeIn(elements, duration, callback, display) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            if(element) {\n                element.style.opacity = 0;\n                element.style.display = display || \"block\";\n            }\n        }\n\n        this.isFadeIn = true;\n\n        let opacityTarget = parseFloat(elements[0].dataset.opacityTarget || 1),\n            step = (16.66666 * opacityTarget) / (duration || this.options.fadeSpeed),\n            fade = () => {\n                let currentOpacity = parseFloat(elements[0].style.opacity);\n                if (!((currentOpacity += step) > opacityTarget)) {\n                    for (let element of elements) {\n                        if(element) {\n                            element.style.opacity = currentOpacity;\n                        }\n                    }\n                    if(!this.isFadeIn) return;\n                    requestAnimationFrame(fade);\n                } else {\n                    for (let element of elements) {\n                        if(element) {\n                            element.style.opacity = opacityTarget;\n                        }\n                    }\n                    callback && callback.call(this, elements);\n                }\n            };\n\n        fade();\n    }\n\n    hide(elements) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            if(element.style.display != 'none') {\n                element.dataset.initialDisplay = element.style.display;\n            }\n            element.style.display = 'none';\n        }\n    }\n\n    show(elements, display) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.display = element.dataset.initialDisplay || display || 'block';\n        }\n    }\n\n    wrap(input) {\n        return typeof input[Symbol.iterator] === 'function' && typeof input !== 'string' ? input : [input];\n    }\n\n    on(events, callback) {\n        events = this.wrap(events);\n        for (let element of this.elements) {\n            if (!element.fullyNamespacedEvents) {\n                element.fullyNamespacedEvents = {};\n            }\n            for (let event of events) {\n                element.fullyNamespacedEvents[event] = callback;\n                element.addEventListener(event, callback);\n            }\n        }\n        return this;\n    }\n\n    off(events) {\n        events = this.wrap(events);\n        for (let element of this.elements) {\n            for (let event of events) {\n                if (typeof element.fullyNamespacedEvents !== 'undefined' && event in element.fullyNamespacedEvents) {\n                    element.removeEventListener(event, element.fullyNamespacedEvents[event]);\n                }\n            }\n        }\n        return this;\n    }\n\n    // api\n\n    open(elem, position = 0) {\n        elem = elem || this.elements[0];\n        if(typeof jQuery !== \"undefined\" && elem instanceof jQuery) {\n            elem = elem.get(0);\n        }\n        if(position > 0) {\n            elem = this.elements[position];\n        }\n        this.initialImageIndex = this.elements.indexOf(elem);\n        if(this.initialImageIndex > -1) {\n            this.openImage(elem);\n        }\n    }\n\n    openPosition(position) {\n        let elem = this.elements[position];\n        this.open(elem, position)\n    }\n    next() {\n        this.loadImage(1);\n    }\n\n    prev() {\n        this.loadImage(-1);\n    }\n\n    // get some useful data\n    getLighboxData() {\n        return {\n            currentImageIndex: this.currentImageIndex,\n            currentImage: this.currentImage,\n            globalScrollbarWidth: this.globalScrollbarWidth\n        };\n    }\n\n    //close is exposed anyways..\n\n    destroy() {\n        //remove all custom event listeners from elements\n        this.off([\n            'close.' + this.eventNamespace,\n            'closed.' + this.eventNamespace,\n            'nextImageLoaded.' + this.eventNamespace,\n            'prevImageLoaded.' + this.eventNamespace,\n            'change.' + this.eventNamespace,\n            'nextDone.' + this.eventNamespace,\n            'prevDone.' + this.eventNamespace,\n            'error.' + this.eventNamespace,\n            'changed.' + this.eventNamespace,\n            'next.' + this.eventNamespace,\n            'prev.' + this.eventNamespace,\n            'show.' + this.eventNamespace,\n            'shown.' + this.eventNamespace\n        ]);\n\n        this.removeEventListener(this.elements, 'click.' + this.eventNamespace);\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'contextmenu.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'keyup.' + this.eventNamespace);\n\n        this.removeEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace);\n        this.removeEventListener(this.domNodes.closeButton, 'click.' + this.eventNamespace);\n        this.removeEventListener(window, 'resize.' + this.eventNamespace);\n        this.removeEventListener(window, 'hashchange.' + this.eventNamespace);\n\n        this.close();\n        if (this.isOpen) {\n            document.body.removeChild(this.domNodes.wrapper);\n            document.body.removeChild(this.domNodes.overlay);\n        }\n\n        this.elements = null;\n    }\n\n    refresh() {\n        if (!this.initialSelector) {\n            throw 'refreshing only works when you initialize using a selector!';\n        }\n\n        let options = this.options,\n            selector = this.initialSelector;\n\n        this.destroy();\n\n        this.constructor(selector, options);\n\n        return this;\n    }\n}\nexport default SimpleLightbox;\n\nglobal.SimpleLightbox = SimpleLightbox;\n","export const galleryItems = [\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/14/16/43/rchids-4202820__480.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/14/16/43/rchids-4202820_1280.jpg',\n    description: 'Hokkaido Flower',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677_1280.jpg',\n    description: 'Container Haulage Freight',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785_1280.jpg',\n    description: 'Aerial Beach View',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619_1280.jpg',\n    description: 'Flower Blooms',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334_1280.jpg',\n    description: 'Alpine Mountains',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571_1280.jpg',\n    description: 'Mountain Lake Sailing',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272_1280.jpg',\n    description: 'Alpine Spring Meadows',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255_1280.jpg',\n    description: 'Nature Landscape',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843_1280.jpg',\n    description: 'Lighthouse Coast Sea',\n  },\n];\n","import SimpleLightbox from 'simplelightbox/src/simple-lightbox.js';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport { galleryItems } from './gallery-items.js';\n\nconst galleryContainer = document.querySelector('.gallery');\nconst galleryItemHTML = galleryItems.map(item => `\n  <li class=\"gallery__item\">\n    <a class=\"gallery__link\" href=\"${item.original}\">\n      <img class=\"gallery__image\" src=\"${item.preview}\" alt=\"${item.description}\" />\n    </a>\n  </li>\n`);\ngalleryContainer.innerHTML = galleryItemHTML.join('');\n\nconst gallery = new SimpleLightbox('.gallery__link', {\n  captionsData: 'alt',\n  captionDelay: 250,\n  captions: true,\n  captionPosition: 'bottom',\n});\n"],"names":["Object","defineProperty","$da4b248c00322402$exports","value","default","obj","key","enumerable","configurable","writable","$5c8792bdb860ecb2$var$SimpleLightbox","checkPassiveEventsSupport","supportsPassive","opts","get","window","addEventListener","removeEventListener","e","getCaptionElement","elem","this","options","captionSelector","startsWith","selector","replace","trimStart","sibling","nextElementSibling","matches","querySelector","generateQuerySelector","tagName","id","className","parentNode","str","classes","trim","split","i","length","childIndex","previousElementSibling","createDomNodes","domNodes","overlay","document","createElement","classList","add","dataset","opacityTarget","overlayOpacity","closeButton","innerHTML","closeText","spinner","navigation","navText","counter","download","downloadLink","setAttribute","textContent","appendChild","caption","captionPosition","captionClass","captionClasses","image","wrapper","rtl","throttle","func","limit","inThrottle","apply","arguments","setTimeout","isValidLink","element","fileExt","getAttribute","sourceAttr","RegExp","test","calculateTransitionPrefix","s","body","documentElement","style","getScrollbarWidth","scrollbarWidth","scrollDiv","offsetWidth","clientWidth","removeChild","toggleScrollbar","type","fixedElements","slice","call","querySelectorAll","fixedClass","fullWindowWidth","innerWidth","documentElementRect","getBoundingClientRect","right","Math","abs","left","isAppleDevice","paddingRight","parseInt","getComputedStyle","originalPaddingRight","forEach","actualPadding","calculatedPadding","parseFloat","remove","padding","close","isOpen","isAnimating","isClosing","relatedElements","currentImageIndex","dispatchEvent","Event","history","historyHasChanges","hashReseted","resetHash","eventNamespace","fadeOut","fadeSpeed","disableScroll","htmlClass","additionalHtml","currentImage","controlCoordinates","mousedown","zoomed","capture","initialScale","minMax","maxZoom","doubleTapped","hash","location","substring","preload","index","next","prev","nextImage","Image","prevImage","event","src","target","loadedImages","indexOf","push","loadImage","direction","slideDirection","newIndex","loop","animationSlide","slide","animationSpeed","swipeDiff","show","contains","adjustImage","preloading","tmpImage","windowWidth","widthRatio","windowHeight","innerHeight","heightRatio","scale","translateX","translateY","zoomPanElement","display","dirIsDefined","initialImageIndex","alertError","alert","alertErrorMessage","updateURL","captionContainer","captionText","imageWidth","width","imageHeight","height","scaleImageToRatio","ratio","top","globalScrollbarWidth","focus","forceFocus","fadeIn","captions","captionType","captionsData","hide","setCaption","targetOffsetX","targetOffsetY","targetScale","transitionPrefix","min","max","setZoomData","hashchangeHandler","initialLocationHash","addEvents","bind","getElementsByTagName","currentTarget","match","preventDefault","scrollZoom","containerHeight","getDimensions","containerWidth","imgHeight","imgWidth","containerOffsetX","offsetLeft","containerOffsetY","offsetTop","initialOffsetX","initialOffsetY","delta","wheelDelta","undefined","detail","scrollZoomFactor","scrollTopPos","scrollTop","pinchOffsetX","pageX","pinchOffsetY","pageY","limitOffsetX","limitOffsetY","scaleDifference","opacity","initialPinchDistance","targetPinchDistance","initialPointerOffsetX","clientX","initialPointerOffsetY","clientY","touchCount","touches","doubleTapZoom","initialPointerOffsetX2","initialPointerOffsetY2","sqrt","transitionCapable","imageLeft","swipeYDiff","swipeStart","swipeYStart","pointerOffsetX","pointerOffsetY","touchmoveCount","pointerOffsetX2","pointerOffsetY2","swipeEnd","swipeYEnd","isTouchDevice","possibleDir","swipeTolerance","swipeClose","styles","offsetHeight","borderTopWidth","borderBottomWidth","paddingTop","paddingBottom","borderLeftWidth","borderRightWidth","paddingLeft","updateHash","newHash","newURL","href","pushStateSupport","title","urlChangedOnce","back","pushState","pathname","search","clearTimeout","historyUpdateTimeout","captionDelay","speed","pos","getRelated","rel","elems","Array","from","elements","filter","openImage","showCounter","targetURL","events","callback","wrap","namespaces","isPassiveEventsSupported","passive","duration","element1","getPropertyValue","isFadeIn","step","fade","currentOpacity","requestAnimationFrame","element2","initialDisplay","input","Symbol","iterator","on","fullyNamespacedEvents","off","open","position","jQuery","openPosition","getLighboxData","destroy","refresh","initialSelector","constructor","$parcel$interopDefault","nav","enableKeyboard","docClose","disableRightClick","throttleInterval","uniqueImages","navigator","platform","assign","defaultOptions","imgArr","parentElement","$5c8792bdb860ecb2$export$2e2bcd8739ae039","$parcel$global","SimpleLightbox","$97d4a16aabe2244a$var$galleryContainer","$97d4a16aabe2244a$var$galleryItemHTML","preview","original","description","map","item","join"],"version":3,"file":"01-gallery.f1b8244d.js.map"}